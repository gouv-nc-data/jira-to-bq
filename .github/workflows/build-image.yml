name: build push deploy image

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'

jobs:
  build_push_deploy:
    if: github.run_number != 1
    permissions:
      contents: read
      packages : write

    env:
      IMAGE_NAME: ${{ vars.GCP_REGION}}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID}}/${{ vars.GCP_REPOSITORY}}/${{ vars.PROJECT_NAME }}-function

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: setup-tools
        uses: buildpacks/github-actions/setup-tools@v5.4.0

      - id: setup-pack
        uses: buildpacks/github-actions/setup-pack@v5.4.0

      - id: package
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          img_name=${{ vars.PROJECT_NAME }}-function
          echo "image name : $img_name"
          pack build  --builder gcr.io/buildpacks/builder:v1 \
            --env GOOGLE_FUNCTION_SIGNATURE_TYPE=http \
            --env GOOGLE_FUNCTION_TARGET=${{ vars.FUNCTION_NAME }} \
            --env GOOGLE_PYTHON_VERSION="3.10.x" \
            $img_name
        shell: bash

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: "access_token"
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.GCP_REGION}}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Push Docker image
        run: docker tag ${{ vars.PROJECT_NAME }}-function:latest ${{ env.IMAGE_NAME }}:latest && docker push ${{ env.IMAGE_NAME }}:latest 
      
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ vars.GCP_CLOUD_SERVICE }}
          region: ${{ vars.GCP_REGION}}
          image: ${{ env.IMAGE_NAME }}:latest

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
